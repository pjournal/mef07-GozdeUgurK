end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.FE.IN"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SE.ADT.LITR.ZS"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SE.PRM.TENR"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.ICP.ZS"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.ICP.ZS"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.ICP.ZS"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.DPND"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
z<-WDIsearch("gender")
View(z)
country_code <- "TR"
indicator_code <- "SG.LAW.NODC.HR"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
print(world_bank_data)
print(world_bank_data)
install.packages("WDI")
library(WDI)
install.packages("remotes")
library(remotes)
install_github('vincentarelbundock/WDI')
indicator_codes <- c("NY.GDP.MKTP.CD", "SP.POP.TOTL", "NY.GDP.PCAP.CD")
countries <- c("TUR", "USA")
years <- 2010:2020
world_bank_data <- WDI(indicator = indicator_codes, country = countries,
start = min(years), end = max(years), extra = TRUE)
View(world_bank_data)
View(world_bank_data)
View(world_bank_data)
View(x)
View(y)
country_code <- "TR"
indicator_code <- "SG.LAW.NODC.HR"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
View(world_bank_data)
View(world_bank_data)
View(world_bank_data)
View(loaded_data)
View(world_bank_data)
View(world_bank_data)
indicator_codes <- c("NY.GDP.MKTP.CD", "SP.POP.TOTL", "NY.GDP.PCAP.CD")
countries <- c("TUR", "USA")
years <- 2010:2020
world_bank_data_2 <- WDI(indicator = indicator_codes, country = countries,
start = min(years), end = max(years), extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.FE.IN"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("NY.GDP.MKTP.CD", "SP.POP.TOTL", "NY.GDP.PCAP.CD")
countries <- c("TR", "USA")
years <- 2010:2020
world_bank_data_2 <- WDI(indicator = indicator_codes, country = countries,
start = min(years), end = max(years), extra = TRUE)
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.FE.IN"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
install.packages("WDI")
library(WDI)
install.packages("remotes")
install.packages("remotes")
library(remotes)
install_github('vincentarelbundock/WDI')
country_code <- "TR"
indicator_code <- "SP.POP.TOTL.FE.IN"
start_date <- 2018
end_date <- 2023
world_bank_data <- WDI( indicator = indicator_code,
country = country_code,
start = start_date,
end = end_date,
extra = TRUE)
saveRDS(world_bank_data, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
loaded_data
View(loaded_data)
world_bank_data <- readRDS("~/Documents/GitHub/mef07g-astralprojection/world_bank_data.rds")
world_bank_data <- readRDS("~/Documents/GitHub/mef07g-astralprojection/world_bank_data.rds")
loaded_data
world_bank_data
indicator_codes <- c("NY.GDP.MKTP.CD", "SP.POP.TOTL", "NY.GDP.PCAP.CD")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
View(world_bank_data_2)
indicator_codes <- c("SP.POP.TOTL", "NY.GDP.PCAP.CD","SH.DYN.MORT")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.TOTL", "NY.GDP.PCAP.CD","SH.DYN.MORT","SP.POP.DPND")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SP.POP.TOTL.WB.AG25-54")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS","SL.EMP.TOTL.FE.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS","SL.EMP.TOTL.FE.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
saveRDS(world_bank_data_2, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
world_bank_data <- readRDS("~/Documents/GitHub/mef07g-astralprojection/world_bank_data.rds")
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
saveRDS(world_bank_data_2, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
install.packages("WDI")
library(WDI)
install.packages("remotes")
library(remotes)
install_github('vincentarelbundock/WDI')
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_2
install.packages("WDI")
library(WDI)
install.packages("remotes")
library(remotes)
install_github('vincentarelbundock/WDI')
install.packages("remotes")
install.packages("WDI")
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_2
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_summary <- world_bank_data_2[,c("country","year","SP.POP.DPND","FP.CPI.TOTL.ZG
","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")]
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_summary <- world_bank_data_2[,c("country","year","SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")]
world_bank_data_summary
View(world_bank_data_2)
indicator_codes <- c("SP.POP.TOTL", "NY.GDP.PCAP.CD","SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
saveRDS(world_bank_data_2, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
indicator_codes <- c("SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_summary <- world_bank_data_2[,c("country","year","SP.POP.TOTL","NY.GDP.PCAP.CD","SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")]
colnames(loaded_data)
indicator_codes <- c("SP.POP.TOTL","NY.GDP.PCAP.CD","SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")
countries <- c("TUR", "USA")
start_date <- 2018
end_date <- 2023
world_bank_data_2 <- WDI( indicator = indicator_codes,
country = countries,
start = start_date,
end = end_date,
extra = TRUE)
world_bank_data_summary <- world_bank_data_2[,c("country","year","SP.POP.TOTL","NY.GDP.PCAP.CD","SP.POP.DPND","FP.CPI.TOTL.ZG","SL.UEM.TOTL.ZS","SL.TLF.CACT.FE.ZS","SL.TLF.CACT.MA.ZS")]
colnames(world_bank_data_summary) <- c("Country","Year","Population","GdpPerCapita","AgeDependancyRatio","Inflation","UnemploymentRate","FemaleLaborRate","MaleLaborRate")
world_bank_data_summary
saveRDS(world_bank_data_2, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
saveRDS(world_bank_data_summary, file = "world_bank_data.rds")
loaded_data <- readRDS("world_bank_data.rds")
loaded_data
shiny::runApp('deleteme')
runApp('sil')
myData
pti <- c("shiny","tidyverse")
pti <- pti[!(pti %in% installed.packages())]
if(length(pti)>0){
install.packages(pti)
}
##########
### Shiny starter code
##########
library(shiny)
library(tidyverse)
MovieData = read.csv("/Users/gozde.ugur/Downloads/movies.csv")
print(MovieData)
runApp('sil')
print(movies)
runApp('deleteme/deneme')
View(MovieData)
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
# Prepare data
film_verisi <-
MovieData %>%
filter(year >= 2000) %>%
select(Lead.Studio,Genre,Year,`Audience.score..`) %>%
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('sil')
runApp('deleteme/deneme')
current_working_directory <- getwd()
current_working_directory <- getwd()
print(current_working_directory)
# Bu kodu bir app.R dosyasına yapıştırın ve R Studio'da çalıştırın.
library(shiny)
library(tidyverse)
#setwd("/Users/gozde.ugur/Documents/GitHub/mef07-GozdeUgurK/Shiny")
MovieData = read.csv("/Users/gozde.ugur/Documents/GitHub/mef07-GozdeUgurK/Shiny/movies.csv")
# Prepare data
film_verisi <-
MovieData %>%
filter(Year >= 2000) %>%
select(Genre, Year, `Audience.score..`)
# Shiny uygulaması
ui <- fluidPage(
titlePanel("Movie Analysis"),
sidebarLayout(
sidebarPanel(
selectInput("Genre", "Tür Seç:",
choices = unique(film_verisi$Genre),
multiple = TRUE),
br(),
sliderInput("year_range", "Yıl Aralığı Seç:",
min = min(film_verisi$Year), max = max(film_verisi$Year),
value = c(min(film_verisi$Year), max(film_verisi$Year))),
br(),
sliderInput("score_range", "Puan Aralığı Seç:",
min = 0, max = 100, value = c(0, 100))
),
mainPanel(
plotOutput("genre_plot")
)
)
)
server <- function(input, output) {
# Filmleri filtrele
filtered_films <- reactive({
filter(film_verisi,
Genre %in% input$Genre &
`Audience.score..` >= input$score_range[1] &
`Audience.score..` <= input$score_range[2])
})
# ggplot ile çubuk grafik çizimi
output$genre_plot <- renderPlot({
ggplot(filtered_films(), aes(x = Year, fill = Genre)) +
geom_bar(position = "dodge") +
labs(title = "Film Türüne Göre Yıl Bazında Dağılım",
x = "Yıl",
y = "Film Sayısı",
fill = "Tür") +
theme_minimal()
})
}
shinyApp(ui, server)
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('deleteme/deneme')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
runApp('Shiny')
rlang::last_trace()
install.packages("plotly")
library(plotly)
# Örnek veriyi oluştur
veri <- data.frame(
Il = c('Istanbul', 'Ankara', 'Izmir', 'Bursa', 'Adana'),
Nufus = c(15000000, 5500000, 2800000, 2200000, 2200000),
Enlem = c(41.0082, 39.9334, 38.4192, 40.1821, 37.0000),
Boylam = c(28.9784, 32.8597, 27.1287, 29.0670, 35.3213)
)
# 3D harita oluştur
harita <- plot_ly(veri, x = ~Boylam, y = ~Enlem, z = ~Nufus, text = ~Il, type = "scatter3d", mode = "markers", marker = list(size = ~Nufus))
# Grafik üzerine başlık ve etiketler ekle
harita <- layout(harita, title = "Türkiye İllerinin Nüfusu 3D Haritası", scene = list(xaxis = list(title = "Boylam"), yaxis = list(title = "Enlem"), zaxis = list(title = "Nüfus")))
# Haritayı görüntüle
harita
